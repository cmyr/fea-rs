on:
  pull_request:
  push:
    branches:
      - main
    tags:
      - "*"

name: Continuous integration

jobs:
  check:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - run: rustup component add rustfmt

      - name: rustfmt check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: cargo doc
        uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --all-features --document-private-items

  clippy-lint:
    name: Clippy lints
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
          profile: minimal
          override: true

      - name: cargo clippy --all-features
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-features --all-targets -- -D warnings

      - name: cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets --no-default-features -- -D warnings

  test-all-targets:
    name: cargo test all-targets
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: getsentry/action-setup-venv@v1.0.0
        id: venv
        with:
          python-version: 3.10.7
          requirement-files: requirements.txt
      - run: pip install -r requirements.txt
        if: steps.venv.outputs.cache-hit != 'true'

      - name: install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: cargo test all-targets
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-targets --all-features


  test-basic:
    name: cargo test basic
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: getsentry/action-setup-venv@v1.0.0
        id: venv
        with:
          python-version: 3.10.7
          requirement-files: requirements.txt
      - run: pip install -r requirements.txt
        if: steps.venv.outputs.cache-hit != 'true'

      - name: install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: cargo test basic
        uses: actions-rs/cargo@v1
        with:
          command: test

